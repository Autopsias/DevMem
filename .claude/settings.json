{
  "env": {
    "PYTHONPATH": "$CLAUDE_PROJECT_DIR/src",
    "CLAUDE_AGENT_FRAMEWORK_ENABLED": "true",
    "CLAUDE_AGENT_NATURAL_DELEGATION": "true",
    "CLAUDE_AGENT_PARALLEL_EXECUTION": "true",
    "CLAUDE_AGENT_SEQUENTIAL_INTELLIGENCE": "true",
    "CLAUDE_AGENT_MEMORY_INTEGRATION": "true",
    "CLAUDE_AGENT_PERFORMANCE_TARGET_MS": "1000",
    "CLAUDE_AGENT_MAX_CONTEXT_TOKENS": "32000",
    "CLAUDE_AGENT_HOT_RELOAD": "true",
    "CLAUDE_AGENT_COORDINATION_LOGGING": "false",
    "TEST_COVERAGE_MINIMUM": "80",
    "QUALITY_GATES_ENABLED": "true",
    "SECURITY_SCANNING_ENABLED": "true"
  },
  "permissions": {
    "allow": [
      "Bash(pytest:*)",
      "Bash(ruff check:*)",
      "Bash(black:*)",
      "Bash(mypy:*)",
      "Bash(make test-coverage:*)",
      "Bash(make lint-ci:*)",
      "Bash(git:*)",
      "Edit(src/**/*.py)",
      "Edit(tests/**/*.py)",
      "Edit(docs/**/*.md)",
      "Write(tests/**/*.py)",
      "Read(src/**/*)",
      "Read(tests/**/*)",
      "Read(docs/**/*)",
      "Task(*)",
      "mcp__*__*"
    ],
    "deny": [
      "Bash(rm -rf:*)",
      "Bash(sudo:*)",
      "Edit(.env*)",
      "Edit(**/secrets/**)",
      "Write(.env*)",
      "Write(**/secrets/**)"
    ],
    "additionalDirectories": [
      "../docs/"
    ],
    "defaultMode": "acceptEdits"
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/scripts/hooks/essential_security.sh",
            "timeout": 5,
            "description": "Essential bash security validation - prevents dangerous commands"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command", 
            "command": "$CLAUDE_PROJECT_DIR/scripts/hooks/essential_quality.sh",
            "timeout": 10,
            "description": "Essential code quality enforcement - linting, formatting, file size limits"
          }
        ]
      }
    ]
  },
  "model": "claude-3-5-sonnet-20241022",
  "includeCoAuthoredBy": true,
  "cleanupPeriodDays": 30,
  "agents": {
    "version": "2.0",
    "framework_config": {
      "natural_delegation_enabled": true,
      "parallel_execution_enabled": true,
      "sequential_intelligence_enabled": true,
      "memory_integration_enabled": true,
      "performance_monitoring_enabled": true,
      "hot_reload_enabled": true
    },
    "performance_targets": {
      "agent_selection_time_ms": 1000,
      "coordination_latency_ms": 500,
      "context_preservation_rate": 0.95,
      "sequential_accuracy_rate": 0.95
    },
    "coordination_patterns": {
      "primary_agents": {
        "test-specialist": {
          "enabled": true,
          "specialization": "Testing expertise with async/await patterns and coverage optimization",
          "coordination": ["async-pattern-fixer", "mock-configuration-expert", "coverage-optimizer"],
          "performance_timeout_ms": 30000
        },
        "code-quality-specialist": {
          "enabled": true,
          "specialization": "Security scanning (Semgrep) + quality analysis with pattern enforcement",
          "coordination": ["security-auditor", "pattern-analyzer", "performance-optimizer"],
          "performance_timeout_ms": 45000
        },
        "infrastructure-engineer": {
          "enabled": true,
          "specialization": "Docker orchestration with systematic infrastructure coordination",
          "coordination": ["docker-specialist", "environment-synchronizer", "performance-optimizer"],
          "performance_timeout_ms": 60000
        },
        "digdeep": {
          "enabled": true,
          "specialization": "Five Whys root cause analysis with MCP enhancement",
          "coordination": ["analysis-gateway", "meta-coordinator"],
          "performance_timeout_ms": 180000
        }
      },
      "coordination_intelligence": {
        "parallel_execution_triggers": [
          "using X tasks in parallel",
          "coordinating analysis using N tasks in parallel",
          "analyzing problem using parallel assessment"
        ],
        "sequential_patterns": {
          "analysis_implementation_validation": ["digdeep", "domain-specialist", "quality-validator"],
          "discovery_coordination_integration": ["discovery-agent", "specialists", "synthesis-coordinator"],
          "preparation_execution_verification": ["setup-agent", "action-agent", "verification-agent"]
        },
        "meta_orchestration_triggers": [
          "4+ domain problems",
          "circular dependencies",
          "cascade prevention"
        ]
      }
    },
    "memory_hierarchy": {
      "project_memory": ".claude/memory/",
      "domain_patterns": [
        "domains/testing-patterns.md",
        "domains/infrastructure-patterns.md", 
        "domains/security-patterns.md"
      ],
      "coordination_patterns": "agent-coordination-patterns.md",
      "sequential_intelligence": "sequential-intelligence-patterns.md"
    },
    "quality_gates": {
      "test_coverage_minimum": 80,
      "type_checking_required": true,
      "linting_required": true,
      "security_scanning_required": true,
      "pre_commit_validation": true
    }
  }
}